<?php

/**
 * Implementation of hook_perm().
 */
function node_updated_perm() {
  $perms = array(
    'administer node_updated',
    'check node_updated'
  );

  return $perms;
}

function node_updated_check($node_id, $timestamp){
  if(user_access('check node_updated')){
    drupal_bootstrap(DRUPAL_BOOTSTRAP_DATABASE);
    //nothing fancy here, check if a node has been updated
    $q = 'SELECT changed FROM node WHERE nid = %d AND changed > %d';
    $result = db_query($q, array($node_id, $timestamp));
    $row = db_fetch_array($result);
    if($row){
      die('1');
    }
  }
  die('0');
}

function node_updated_init() {
  if(user_access('check node_updated')){
    drupal_add_js(drupal_get_path('module', 'node_updated') . '/node_updated.js');
  }
  
}

function node_updated_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if(user_access('check node_updated')){
    if($op == 'load'){
      $check_time = variable_get('_node_updated_check_time', 60000);
      $css = variable_get('_node_updated_css', 'z-index: 9000; text-align: center; width: 100%; color: #514721; position: fixed; top: 0; left: 0; display: none; background-color: #FFF6BF; border: solid 1px #FFD324');
      drupal_add_js(array(
        'node_updated' => array('node_id' => $node->nid,'changed' => $node->changed, 'interval'=>$check_time, 'css'=>$css),
        ), 'setting');
    }
  }
}

function node_updated_menu(){
  
  //smush it settings
  $items['admin/settings/node-updated'] = array(
    'title' => 'Node Updated',
    'description' => t('The settings for node updated'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('node_updated_settings_page'),
    'access callback' => 'user_access',
    'access arguments' => array('administer node_updated'),
    'type' => MENU_NORMAL_ITEM,
  );

  //this seems redundant
  $items['admin/settings/node-updated/settings'] = $items['admin/settings/smush-it'];
  //replace values that are different for this menu item (it is a tab)
  $items['admin/settings/node-updated/settings']['type'] = MENU_DEFAULT_LOCAL_TASK;
  $items['admin/settings/node-updated/settings']['weight'] = -10;
  $items['admin/settings/node-updated/settings']['title'] = 'Settings';
  
  $items['node_updated'] = array(
    'page callback' => 'node_updated_check',
    'access arguments' => array('access content'), 
    'page arguments' => array(1, 2),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}



/**
 * The smush.it admin settings form
 * @return array 
 */
function node_updated_settings_page() {
  //in this example i'm creating a checkbox for each existing content type
  $form['check_time'] = array(
    '#type' => 'textfield',
    '#title' => t('Time between checks (milliseconds)'),
    '#description' => t('The number of milliseconds between checks.'),
    '#default_value' => variable_get('_node_updated_check_time', 60000)
  );

  $form['css'] = array(
    '#type' => 'textarea',
    '#title' => t('CSS Style for the node_updated message'),
    '#description' => t('If you want to style it in a css file, leave this empty. The ID for the message is #node-updated-message.'),
    '#default_value' => variable_get('_node_updated_css', 'z-index: 9000; text-align: center; width: 100%; color: #514721; position: fixed; top: 0; left: 0; display: none; background-color: #FFF6BF; border: solid 1px #FFD324')
  );
  
  $form['save'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
    '#executes_submit_callback' => true
  );

  $form['#submit'] = array(
    '_node_updated_form_submit'
  );

  return $form;
}

/**
 * Save the submitted values
 * @param type $form
 * @param type $form_state 
 */
function _node_updated_form_submit($form, &$form_state) {
  variable_set('_node_updated_check_time', $form['check_time']['#value']);
  variable_set('_node_updated_css', $form['css']['#value']);
  
  drupal_set_message('Node Updated settings updated', 'status');
}